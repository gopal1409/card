###volumes
  13  docker container run -d --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=true -v mysql-db:/var/lib/mysql mysql:8.0.33
   14  docker ps
   15  docker volume ls
   16  docker volume inspect mysql-db
   17  cd /var/lib/docker/volumes/mysql-db/_data
###update the container
 25  docker stop mysql
   26  docker rm mysql
   27  docker volume ls
31  docker container run -d --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=true -v mysql-db:/var/lib/mysql mysql:8.0
   32  docker ps
   33  docker container inspect mysql
###3docker image pull
 5  docker pull tomcat
    6  docker images
#####build images
11  apt install default-jdk
   12  java --version
   13  apt install maven
   14  mvn 
   17  git clone https://github.com/gopal1409/springtomcatchatapp.git
   18  cd springtomcatchatapp/
   19  ls
   20  mvn clean package
   21  ls
   22  cd target/
   23  ls
   24  cd ..
   26  rm dockerfile

####convert your app into an dockerimage
 52  nano dockerfile
####put this content inside docker file
FROM openjdk:11
MAINTAINER johncena<john@gmail.com>
VOLUME /tmp
EXPOSE 8080
RUN apt-get update -y
ARG JAR_FILE=target/websocket-demo-0.0.1-SNAPSHOT.jar
WORKDIR /app
COPY $JAR_FILE websocket.jar
ENTRYPOINT ["java","-jar","websocket.jar"]
############to save the file ctrl x press y and enter
   53  docker build -t chatapp .
   54  docker images
  
   56  docker image history chatapp
   57  docker run -d -p 81:8080 chatapp
   58  docker ps
   59  curl localhost:81
   60  ls
   61  cat dockerfile
###for nodejs and cheatsheet
https://github.com/gopal1409/KubernetesDocker
